log_prob = log2(probability),
surprisal = -log_prob)
table(df_fb_bl$condition, df_fb_bl$First_mention)
table(df_fb_bl$condition, df_fb_bl$consistency)
table(df_fb_bl$condition, df_fb_bl$belief)
table(df_fb_bl$consistency, df_fb_bl$belief)
df_fb_gpt3 = read_csv("../../data/processed/bradford-fb-modified_gpt3_surprisals.csv")
nrow(df_fb_gpt3)
df_fb_gpt3 = df_fb_gpt3 %>%
mutate(condition = `Condition code`,
surprisal = -log_prob)
table(df_fb_gpt3$condition)
table(df_fb_gpt3$condition, df_fb_gpt3$consistency)
table(df_fb_gpt3$condition, df_fb_gpt3$belief)
table(df_fb_gpt3$consistency, df_fb_gpt3$belief)
df_fb_gpt3 = df_fb_gpt3 %>%
mutate(mentions_ratio = prior_mentions_start / prior_mentions_end)
df_fb_bl = df_fb_bl %>%
mutate(mentions_ratio = prior_mentions_start / prior_mentions_end)
nrow(df_fb_bl)
df_fb_bl %>%
ggplot(aes(x = surprisal,
y = belief,
fill = consistency)) +
geom_density_ridges2(aes(height = ..density..),
color=gray(0.25),
alpha = 0.5,
scale=0.85,
size=.9,
stat="density") +
labs(x = "Surprisal of target word",
y = "Belief condition") +
geom_vline(xintercept = 0, linetype = "dotted") +
theme_bw() +
facet_wrap(~First_mention)
df_fb_gpt3 %>%
filter(Modified == "Yes") %>%
ggplot(aes(x = surprisal,
y = belief,
fill = consistency)) +
geom_density_ridges2(aes(height = ..density..),
color=gray(0.25),
alpha = 0.5,
scale=0.85,
size=.9,
stat="density") +
labs(x = "Surprisal of target word",
y = "Belief condition") +
geom_vline(xintercept = 0, linetype = "dotted") +
theme_bw() +
facet_wrap(~First_mention +
Recent_mention)
## Density version
df_fb_gpt3 %>%
filter(Modified == "Yes") %>%
ggplot(aes(x = surprisal,
y = belief,
fill = consistency)) +
geom_density_ridges2(aes(height = ..density..),
color=gray(0.25),
alpha = 0.5,
scale=0.85,
size=.9,
stat="density") +
labs(x = "Surprisal of target word",
y = "Belief condition") +
geom_vline(xintercept = 0, linetype = "dotted") +
theme_bw() +
facet_wrap(~First_mention +
Recent_mention,
labeller = label_both())
df_fb_gpt3 %>%
filter(Modified == "Yes") %>%
ggplot(aes(x = surprisal,
y = belief,
fill = consistency)) +
geom_density_ridges2(aes(height = ..density..),
color=gray(0.25),
alpha = 0.5,
scale=0.85,
size=.9,
stat="density") +
labs(x = "Surprisal of target word",
y = "Belief condition") +
geom_vline(xintercept = 0, linetype = "dotted") +
theme_bw() +
facet_wrap(~First_mention +
Recent_mention,
labeller = label_both)
df_fb_gpt3 %>%
ggplot(aes(x = belief,
y = surprisal,
color = consistency)) +
geom_jitter(alpha = .1) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95)) +
labs(x = "Condition",
y = "Surprisal (GPT-3)") +
theme_bw() +
facet_wrap(~First_mention + Recent_mention +mentions_ratio,
,
labeller = label_both)
## Strip chart version
df_fb_gpt3 %>%
ggplot(aes(x = belief,
y = surprisal,
color = consistency)) +
geom_jitter(alpha = .1) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95)) +
labs(x = "Condition",
y = "Surprisal (GPT-3)") +
theme_bw() +
facet_wrap(~First_mention + Recent_mention +mentions_ratio,
,
labeller = label_both,
ncol=2)
## By first mention
df_fb_gpt3 %>%
ggplot(aes(x = condition,
y = surprisal,
color = First_mention)) +
geom_jitter(alpha = .1) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95)) +
labs(x = "Condition",
y = "Surprisal (GPT-3)") +
geom_hline(yintercept = 0, linetype = "dotted") +
theme_bw()  +
facet_wrap(~Recent_mention,
labeller = label_both)
df_fb_bl %>%
ggplot(aes(x = surprisal,
y = belief,
fill = consistency)) +
geom_density_ridges2(aes(height = ..density..),
color=gray(0.25),
alpha = 0.5,
scale=0.85,
size=.9,
stat="density") +
labs(x = "Surprisal of target word",
y = "Belief condition") +
geom_vline(xintercept = 0, linetype = "dotted") +
theme_bw() +
facet_wrap(~First_mention + Recent_mention,
labeller = label_both)
df_fb_bl %>%
filter(Modified == "Yes") %>%
ggplot(aes(x = surprisal,
y = belief,
fill = consistency)) +
geom_density_ridges2(aes(height = ..density..),
color=gray(0.25),
alpha = 0.5,
scale=0.85,
size=.9,
stat="density") +
labs(x = "Surprisal of target word",
y = "Belief condition") +
geom_vline(xintercept = 0, linetype = "dotted") +
theme_bw() +
facet_wrap(~First_mention + Recent_mention,
labeller = label_both)
df_fb_bl$gpt_surprisal = df_fb_gpt3$surprisal
df_fb_bl %>%
ggplot(aes(x = surprisal,
y = gpt_surprisal,
color = belief,
shape = consistency)) +
geom_point(alpha = .5) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_vline(xintercept = 0, linetype = "dotted") +
labs(x = "BERT surprisal",
y = "GPT-3 surprisal") +
# scale_x_continuous(limits = c(-5, 10)) +
# scale_y_continuous(limits = c(-5, 10)) +
theme_bw()
model_full = lmer(data = df_fb_bl,
surprisal ~ belief * consistency +
First_mention +
Recent_mention +
(1 | Item),
control=lmerControl(optimizer="bobyqa"),
REML = FALSE)
summary(model_full)
model_just_fe = lmer(data = df_fb_bl,
surprisal ~ belief + consistency +
First_mention +
Recent_mention +
(1 | Item),
control=lmerControl(optimizer="bobyqa"),
REML = FALSE)
model_full = lmer(data = df_fb_bl,
surprisal ~ belief * consistency +
First_mention +
Recent_mention +
mentions_ratio +
(1 | Item),
control=lmerControl(optimizer="bobyqa"),
REML = FALSE)
summary(model_full)
model_full = lmer(data = df_fb_bl,
surprisal ~ belief * consistency +
First_mention +
Recent_mention +
mentions_ratio +
(1 | Item),
control=lmerControl(optimizer="bobyqa"),
REML = FALSE)
model_just_fe = lmer(data = df_fb_bl,
surprisal ~ belief + consistency +
First_mention +
Recent_mention +
mentions_ratio +
(1 | Item),
control=lmerControl(optimizer="bobyqa"),
REML = FALSE)
model_no_belief = lmer(data = df_fb_bl,
surprisal ~  consistency +
First_mention +
Recent_mention +
mentions_ratio +
(1 | Item),
control=lmerControl(optimizer="bobyqa"),
REML = FALSE)
model_no_con = lmer(data = df_fb_bl,
surprisal ~  belief +
First_mention +
Recent_mention +
mentions_ratio +
(1 | Item),
control=lmerControl(optimizer="bobyqa"),
REML = FALSE)
summary(model_full)
anova(model_full, model_just_fe)
anova(model_just_fe, model_no_belief)
anova(model_just_fe, model_no_con)
df_tidy_results = broom.mixed::tidy(model_full)
df_tidy_results %>%
filter(effect == "fixed") %>%
ggplot(aes(x = term,
y = estimate)) +
geom_point() +
coord_flip() +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_errorbar(aes(ymin = estimate - 2*std.error,
ymax = estimate + 2*std.error),
width=.2,
position=position_dodge(.9)) +
theme_minimal()
model_full = lmer(data = df_fb_gpt3,
surprisal ~ belief * consistency +
First_mention +
Recent_mention +
mentions_ratio +
(1 | Item),
control=lmerControl(optimizer="bobyqa"),
REML = FALSE)
model_just_fe = lmer(data = df_fb_gpt3,
surprisal ~ belief + consistency +
First_mention +
Recent_mention +
mentions_ratio +
(1 | Item),
control=lmerControl(optimizer="bobyqa"),
REML = FALSE)
model_no_belief = lmer(data = df_fb_gpt3,
surprisal ~  consistency +
First_mention +
Recent_mention +
mentions_ratio +
(1 | Item),
control=lmerControl(optimizer="bobyqa"),
REML = FALSE)
model_no_con = lmer(data = df_fb_gpt3,
surprisal ~  belief +
First_mention +
Recent_mention +
mentions_ratio +
(1 | Item),
control=lmerControl(optimizer="bobyqa"),
REML = FALSE)
summary(model_full)
df_tidy_results = broom.mixed::tidy(model_full)
df_tidy_results %>%
filter(effect == "fixed") %>%
ggplot(aes(x = term,
y = estimate)) +
geom_point() +
coord_flip() +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_errorbar(aes(ymin = estimate - 2*std.error,
ymax = estimate + 2*std.error),
width=.2,
position=position_dodge(.9)) +
theme_minimal()
model_full = lmer(data = df_fb_bl,
surprisal ~ belief * consistency +
First_mention +
Recent_mention +
mentions_ratio +
(1 + belief * consistency | Item),
control=lmerControl(optimizer="bobyqa"),
REML = FALSE)
summary(model_full)
model_full = lmer(data = df_fb_gpt3,
surprisal ~ belief * consistency +
First_mention +
Recent_mention +
mentions_ratio +
(1 + belief * consistency | Item),
control=lmerControl(optimizer="bobyqa"),
REML = FALSE)
summary(model_full)
model_just_fe = lmer(data = df_fb_gpt3,
surprisal ~ belief + consistency +
First_mention +
Recent_mention +
mentions_ratio +
(1 + belief * consistency | Item),
control=lmerControl(optimizer="bobyqa"),
REML = FALSE)
anova(model_full, model_just_fe)
model_full = lmer(data = df_fb_gpt3,
surprisal ~ belief * consistency +
(1 + belief * consistency | Item),
control=lmerControl(optimizer="bobyqa"),
REML = FALSE)
model_just_fe = lmer(data = df_fb_gpt3,
surprisal ~ belief + consistency +
(1 + belief * consistency | Item),
control=lmerControl(optimizer="bobyqa"),
REML = FALSE)
anova(model_full, model_just_fe)
summary(model_full)
setwd("/Users/seantrott/Dropbox/UCSD/Research/NLMs/nlm-fb/src/analysis")
df_fb_bl = read_csv("../../data/processed/bradford-fb_bert-large_surprisals.csv")
nrow(df_fb_bl)
df_fb_bl = df_fb_bl %>%
mutate(condition = `Condition code`,
log_prob = log2(probability),
surprisal = -log_prob)
df_fb_bl = df_fb_bl %>%
mutate(first_mention = case_when(
condition == "TB-C" ~ FALSE,
condition == "TB-IC" ~ TRUE,
condition == "FB-C" ~ TRUE,
condition == "FB-IC" ~ FALSE
))
table(df_fb_bl$condition)
table(df_fb_bl$condition, df_fb_bl$consistency)
table(df_fb_bl$condition, df_fb_bl$belief)
table(df_fb_bl$consistency, df_fb_bl$belief)
df_fb_gpt3 = read_csv("../../data/processed/bradford-fb_gpt3_surprisals.csv")
nrow(df_fb_gpt3)
df_fb_gpt3 = df_fb_gpt3 %>%
mutate(condition = `Condition code`,
surprisal = -log_prob)
table(df_fb_gpt3$condition)
table(df_fb_gpt3$condition, df_fb_gpt3$consistency)
table(df_fb_gpt3$condition, df_fb_gpt3$belief)
table(df_fb_gpt3$consistency, df_fb_gpt3$belief)
df_fb_gpt3 = df_fb_gpt3 %>%
mutate(first_mention = case_when(
condition == "TB-C" ~ FALSE,
condition == "TB-IC" ~ TRUE,
condition == "FB-C" ~ TRUE,
condition == "FB-IC" ~ FALSE
))
model_full = lmer(data = df_fb_bl,
surprisal ~ belief * consistency +
(1 + belief * consistency | Item),
control=lmerControl(optimizer="bobyqa"),
REML = FALSE)
model_full = lmer(data = df_fb_bl,
surprisal ~ belief * consistency +
(1 + belief + consistency | Item),
control=lmerControl(optimizer="bobyqa"),
REML = FALSE)
summary(model_full)
model_full = lmer(data = df_fb_gpt3,
surprisal ~ belief * consistency +
(1 + belief * consistency | Item),
control=lmerControl(optimizer="bobyqa"),
REML = FALSE)
model_full = lmer(data = df_fb_gpt3,
surprisal ~ belief * consistency +
(1 + belief + consistency | Item),
control=lmerControl(optimizer="bobyqa"),
REML = FALSE)
summary(model_full)
setwd("/Users/seantrott/Dropbox/UCSD/Research/NLMs/nlm-fb/src/analysis")
df_deception_bl = read_csv("../../data/processed/deception_bert-large_surprisals.csv")
nrow(df_deception_bl)
table(df_deception_bl$condition)
table(df_deception_bl$item)
table(df_deception_bl$a)
df_deception_bl = df_deception_bl %>%
mutate(mentions_ratio = mentions_real / mentions_alt)
```
## GPT-3
```{r}
# setwd("/Users/seantrott/Dropbox/UCSD/Research/NLMs/nlm-fb/src/analysis")
df_deception_gpt = read_csv("../../data/processed/deception_gpt3_surprisals.csv")
nrow(df_deception_gpt)
table(df_deception_gpt$condition)
table(df_deception_gpt$item)
table(df_deception_gpt$a)
df_deception_gpt = df_deception_gpt %>%
mutate(mentions_ratio = mentions_real / mentions_alt)
df_deception_bl %>%
ggplot(aes(x = log_odds,
y = first_mention,
fill = condition)) +
geom_density_ridges2(aes(height = ..density..),
color=gray(0.25),
alpha = 0.5,
scale=0.85,
size=.9,
stat="density") +
labs(x = "Log-odds (real vs. alt)",
y = "First mention (start vs. end)") +
geom_vline(xintercept = 0, linetype = "dotted") +
theme_bw() +
facet_wrap(~mentions_ratio)
df_deception_bl %>%
ggplot(aes(x = condition,
y = log_odds,
color = condition)) +
geom_jitter(alpha = .1) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95)) +
labs(x = "Condition",
y = "Log-odds (real vs. alt)") +
geom_hline(yintercept = 0, linetype = "dotted") +
theme_bw() +
facet_wrap(~mentions_ratio)
df_deception_gpt %>%
ggplot(aes(x = log_odds,
y = first_mention,
fill = condition)) +
geom_density_ridges2(aes(height = ..density..),
color=gray(0.25),
alpha = 0.5,
scale=0.85,
size=.9,
stat="density") +
labs(x = "Log-odds (real vs. alt)",
y = "First mention (start vs. end)") +
geom_vline(xintercept = 0, linetype = "dotted") +
theme_bw() +
facet_wrap(~mentions_ratio)
df_deception_gpt %>%
ggplot(aes(x = condition,
y = log_odds,
color = condition)) +
geom_jitter(alpha = .1) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95)) +
labs(x = "Condition",
y = "Log-odds (real vs. alt)") +
geom_hline(yintercept = 0, linetype = "dotted") +
theme_bw() +
facet_wrap(~first_mention + mentions_ratio,
ncol = 2)
df_deception_gpt %>%
ggplot(aes(x = condition,
y = log_odds,
color = condition)) +
geom_jitter(alpha = .1) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95)) +
labs(x = "Condition",
y = "Log-odds (real vs. alt)") +
geom_hline(yintercept = 0, linetype = "dotted") +
theme_bw() +
facet_wrap(~mentions_ratio,
ncol = 2)
df_deception_gpt %>%
ggplot(aes(x = condition,
y = log_odds,
color = condition)) +
geom_jitter(alpha = .1) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95)) +
labs(x = "Condition",
y = "Log-odds (real vs. alt)") +
geom_hline(yintercept = 0, linetype = "dotted") +
theme_bw() +
facet_wrap(~mentions_ratio)
